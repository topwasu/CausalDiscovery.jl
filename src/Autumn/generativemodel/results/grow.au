(program
  (= GRID_SIZE 8)
  (= background "white")
  (object ObjType1  (list (Cell 0 -1  "gold" ) (Cell 0 0  "gold" ) (Cell 1 -1  "gold" ) (Cell 1 0  "gold" )))
  (object ObjType2  (list (Cell -1 -1  "gray" ) (Cell -1 0  "gray" ) (Cell 0 -1  "gray" ) (Cell 0 0  "gray" ) (Cell 1 -1  "gray" ) (Cell 1 0  "gray" )))
  (object ObjType3 (: color String) (: field1 Int) (list (Cell 0 0 color)))

  (: obj1 ObjType1)
  (: obj2 ObjType2)
  (: addedObjType3List (List ObjType3))

  (: addedObjType1List (List ObjType1))
  (: addedObjType2List (List ObjType2))

  (= obj1 (initnext (ObjType1  (Position 0 1)) (prev obj1)))
  (= obj2 (initnext (ObjType2  (Position 6 1)) (prev obj2)))
  (= addedObjType3List (initnext (list (ObjType3  "green"  2 (Position 1 7)) (ObjType3  "green"  2 (Position 3 7)) (ObjType3  "green"  2 (Position 5 7))) (prev addedObjType3List)))
  
  (= addedObjType1List (initnext (list) (prev addedObjType1List)))
  (= addedObjType2List (initnext (list) (prev addedObjType2List)))

	 (: globalVar1 Int)
	 (= globalVar1 (initnext 2 (prev globalVar1)))

  (: time Int)
  (= time (initnext 0 (+ time 1)))

  (on true (= addedObjType3List (updateObj addedObjType3List (--> obj (nextSolid (prev obj))) (--> obj true))))
  (on true (= addedObjType3List (updateObj addedObjType3List (--> obj (updateObj (prev obj) "color" "green")) (--> obj (& (intersects (filter (--> obj (== (.. obj color) "green")) (prev addedObjType3List)) (map (--> obj (moveDown obj)) (list (prev obj)))) (intersects (list "blue") (map (--> obj (.. obj color)) (list (prev obj)))))))))
  (on true
(= addedObjType3List (removeObj addedObjType3List (--> obj (& (& (intersects (filter (--> obj (== (.. obj color) "green")) (prev addedObjType3List)) (map (--> obj (moveDown obj)) (list (prev obj)))) (intersects (list "blue") (map (--> obj (.. obj color)) (list (prev obj))))) (== (.. obj field1) 1))))))
  (on true (= addedObjType3List (updateObj addedObjType3List (--> obj (updateObj (prev obj) "color" "mediumpurple")) (--> obj (& (intersects (filter (--> obj (& (== (.. (.. obj origin) y) 5) (== (.. obj color) "green"))) (prev addedObjType3List)) (map (--> obj (moveDown obj)) (list (prev obj)))) (intersects (list "blue") (map (--> obj (.. obj color)) (list (prev obj)))))))))
  (on (== (.. (.. (prev obj1) origin) x) 6)
(= globalVar1 1))
  (on (clicked (prev obj1)) (= obj1 (moveRight (prev obj1))))
  (on (& (== (prev globalVar1) 1) (& (clicked (prev obj1)) (== (.. (.. (prev obj2) origin) x) 1))) (= obj1 (moveLeft (prev obj1))))
  (on left (= obj2 (moveLeft (prev obj2))))
  (on down (let ((= addedObjType3List (addObj addedObjType3List (ObjType3  "blue"  (.. obj2 origin)))))))
  (on (clicked (prev obj2))
(= globalVar1 2)))