(program
  (= GRID_SIZE 8)
  (= background "white")
  (object ObjType2 (: color String) (: field1 Int) (list (Cell 0 0 color)))

  (: addedObjType2List (List ObjType2))

  (= addedObjType2List (initnext (list (ObjType2  "darkgreen"  1 (Position 0 0)) (ObjType2  "gray"  2 (Position 1 3)) (ObjType2  "gray"  2 (Position 2 1)) (ObjType2  "gray"  2 (Position 4 4)) (ObjType2  "gray"  2 (Position 5 3))) (prev addedObjType2List)))

  (: time Int)
  (= time (initnext 0 (+ time 1)))

  (on true (= addedObjType2List (updateObj (prev addedObjType2List) (--> obj (updateObj obj "color" "darkgreen")) (--> obj (intersects (adjacentObjs obj) (filter (--> obj (== (.. obj color) "darkgreen")) (prev addedObjType2List)))))))
  (on left (= addedObjType2List (updateObj (prev addedObjType2List) (--> obj (moveLeftNoCollision obj)) (--> obj (== (.. obj field1) 1)))))
  (on (clicked (prev addedObjType2List)) (let ((= addedObjType2List (updateObj (prev addedObjType2List) (--> obj (updateObj obj "field1" 2)))) 
 (= addedObjType2List (updateObj addedObjType2List (--> obj (updateObj obj "field1" 1)) (--> obj (== (.. obj id) (.. (objClicked click addedObjType2List) id)))))
)))
  (on up (= addedObjType2List (updateObj (prev addedObjType2List) (--> obj (moveUpNoCollision obj)) (--> obj (== (.. obj field1) 1)))))
  (on down (= addedObjType2List (updateObj (prev addedObjType2List) (--> obj (moveDownNoCollision obj)) (--> obj (== (.. obj field1) 1)))))
  (on right (= addedObjType2List (updateObj (prev addedObjType2List) (--> obj (moveRightNoCollision obj)) (--> obj (== (.. obj field1) 1))))))